{"version":3,"sources":["data/posts/python/test.md","components/nav/nav-dropdown.js","components/nav/nav.js","components/posts/card.js","components/posts/posts.js","components/posts/post.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dropdown","react_default","a","createElement","key","this","props","mainTitle","className","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","subTitles","map","title","react_router_dom","to","toLowerCase","undefined","d_titles","Component","Nav","style","backgroundColor","type","data-target","aria-controls","aria-label","nav_dropdown","Card","src","alt","Posts","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","sort","match","params","data","Data","nextProps","setState","console","log","marginLeft","marginRight","card","mdFile","require","MainTitle","styled","h1","_templateObject","SectionTitle","h2","_templateObject2","SubSectionTitle","h3","_templateObject3","ParaText","p","_templateObject4","StrongText","strong","_templateObject5","ExtLink","attrs","target","_templateObject6","Code","code","_templateObject7","DividerLine","hr","_templateObject8","options","overrides","component","img","_templateObject9","Post","esm","App","process","nav_nav","react_router","exact","path","Boolean","window","location","hostname","ReactDOM","render","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b93ca91.chunk.js","sourcesContent":["module.exports = \"<h1 id=\\\"react-markdown-example-h1\\\">React Markdown Example <strong>h1</strong></h1>\\n<p>Lorem ipsum dolor sit amet. <strong>p</strong></p>\\n<p><a href=\\\"https://github.com/rahrang/react-markdown-example\\\">A link to the GitHub repository</a>\\n<strong>a</strong></p>\\n<h2 id=\\\"the-first-part-h2\\\">The First Part <strong>h2</strong></h2>\\n<p>Hello! Welcome to the first part. <strong>p</strong></p>\\n<h3 id=\\\"what-we-are-doing-h3\\\">What we are doing <strong>h3</strong></h3>\\n<p>Making our react app use markdown files! <strong>p</strong></p>\\n<h3 id=\\\"why-we-are-doing-it-h3\\\">Why we are doing it <strong>h3</strong></h3>\\n<p>So that when we writing a LOT of text, we can write and style quickly using markdown instead of HTML! This allows us to write several markdown files with content that we need, and then use simple logic to determine which markdown file should be fed into our markdown component! <strong>p</strong></p>\\n<h3 id=\\\"how-we-are-doing-it-h3\\\">How we are doing it <strong>h3</strong></h3>\\n<p>Using the <code>markdown-to-jsx</code> component! <strong>p</strong> and <strong>code</strong></p>\\n<hr>\\n<p><strong>hr</strong></p>\\n<h2 id=\\\"the-second-part-h2\\\">The Second Part <strong>h2</strong></h2>\\n<p><strong>img</strong></p>\\n\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './nav.css'\r\n\r\nclass Dropdown extends Component {\r\n  render() {\r\n    return (\r\n      <li key={this.props.mainTitle+\"_key\"} className=\"nav-item dropdown\">\r\n        <button\r\n          className=\"nav-link dropdown-toggle dropdown-item ButtonLink\"\r\n          id={\"navbarDropdown\" + this.props.id}\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          {this.props.mainTitle}\r\n        </button>\r\n        <div\r\n          className=\"dropdown-menu\"\r\n          aria-labelledby={\"navbarDropdown\" + this.props.id}\r\n        >\r\n          {this.props.subTitles.map(title => (\r\n            <Link key={title+\"_d_item\"} to={'/home/' + title.toLowerCase()} className=\"dropdown-item\">\r\n              {title}\r\n            </Link>\r\n          ))}\r\n          {this.props.d_titles !== undefined && (\r\n            <div className=\"dropdown-divider\" />\r\n          )}\r\n          {this.props.d_titles !== undefined &&\r\n            this.props.d_titles.map(title => (\r\n              <Link key={title+\"_dd_item\"} to={'/home/' + title.toLowerCase()} className=\"dropdown-item\">\r\n                {title}\r\n              </Link>\r\n            ))}\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, { Component } from \"react\";\r\nimport Dropdown from \"./nav-dropdown\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md py-3 rounded sticky-top\" style={{\"backgroundColor\": \"#FF6E00\"}}>\r\n        <span className=\"navbar-brand text-white\">HorangApple</span>\r\n        <button\r\n          className=\"navbar-toggler bg-white navbar-light ButtonLink rounded\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div\r\n          key=\"navbar\"\r\n          className=\"collapse navbar-collapse\"\r\n          id=\"navbarSupportedContent\"\r\n        >\r\n          <ul className=\"navbar-nav ml-auto bg-white rounded px-3\">\r\n            <li className=\"nav-item \">\r\n              <Link className=\"nav-link dropdown-item\" to=\"/home\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <Dropdown\r\n              id={1}\r\n              mainTitle={\"Python\"}\r\n              subTitles={[\"Python\", \"Django\"]}\r\n            />\r\n            <Dropdown\r\n              id={2}\r\n              mainTitle={\"JavaScript\"}\r\n              subTitles={[\"Javascript\", \"React\"]}\r\n            />\r\n            <Dropdown\r\n              id={3}\r\n              mainTitle={\"Etc\"}\r\n              subTitles={[\"Algorithm\", \"Tool\"]}\r\n            />\r\n          </ul>\r\n          {/* <form className=\"form-inline my-2 my-lg-0\">\r\n            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card col-lg-4\">\r\n        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Card title</h5>\r\n          <p className=\"card-text\">\r\n            Some quick example text to build on the card title and make up the\r\n            bulk of the card's content.\r\n          </p>\r\n          <Link to={\"/home/python/1\"}><button className=\"btn btn-primary\">\r\n            Go somewhere\r\n          </button></Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport Card from \"./card\";\r\nimport Data from \"../../data/posts/list.json\";\r\n\r\nclass Posts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sort: this.props.match.params.sort,\r\n      data: Data\r\n    };\r\n  }\r\n\r\n  //라우팅 갱신\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ sort: nextProps.match.params.sort });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.sort !== undefined ) {\r\n      console.log(this.state.data[this.state.sort])\r\n    }\r\n    return (\r\n      <div\r\n        className=\"row\"\r\n        style={{\r\n          marginLeft: \"0px\",\r\n          marginRight: \"0px\"\r\n        }}\r\n      >\r\n        <Card />\r\n        <Card />\r\n        <Card />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from 'react';\r\nimport Markdown from 'markdown-to-jsx';\r\nimport styled from 'styled-components';\r\n\r\nconst mdFile = require('../../data/posts/python/test.md');\r\n\r\nconst MainTitle = styled.h1`\r\n  color: #2980b9;\r\n  border-bottom: 3px solid #333;\r\n`\r\n\r\nconst SectionTitle = styled.h2`\r\n  color: #895fad;\r\n  border-bottom: 2px dashed #333;\r\n  text-align: right;\r\n  margin: 0 20px;\r\n`\r\n\r\nconst SubSectionTitle = styled.h3`\r\n  color: #2980b9;\r\n  text-transform: uppercase;\r\n`\r\n\r\nconst ParaText = styled.p`\r\n  color: green;\r\n  text-align: left;\r\n  margin: 0 20px;\r\n  line-height: 1.375rem;\r\n`\r\n\r\nconst StrongText = styled.strong`\r\n  color: black;\r\n  padding: 2px;\r\n  text-decoration: underline;\r\n`\r\n\r\nconst ExtLink = styled.a.attrs({\r\n  target: '_blank'\r\n})`\r\n  color: #2980b9;\r\n  &:hover {\r\n    color: #ffd700;\r\n  }\r\n`\r\n\r\nconst Code = styled.code`\r\n  color: red;\r\n  font-size: 1.125rem;\r\n`\r\n\r\nconst DividerLine = styled.hr`\r\n  border: 1px solid #2980b9;\r\n`\r\n\r\nconst Image = styled.img`\r\n  border: 5px solid #895fad;\r\n  border-left: none;\r\n  border-right: none;\r\n`\r\n\r\nconst options = {\r\n  overrides: {\r\n    h1: {\r\n      component: MainTitle\r\n    },\r\n    h2: {\r\n      component: SectionTitle\r\n    },\r\n    h3: {\r\n      component: SubSectionTitle\r\n    },\r\n    p: {\r\n      component: ParaText\r\n    },\r\n    strong: {\r\n      component: StrongText\r\n    },\r\n    a: {\r\n      component: ExtLink\r\n    },\r\n    code: {\r\n      component: Code\r\n    },\r\n    img: {\r\n      component: Image\r\n    },\r\n    hr: {\r\n      component: DividerLine\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass Post extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <br />\r\n        <h1 className=\"text-center\">python</h1>\r\n        <br />\r\n        <Markdown options={options}>\r\n          {mdFile}\r\n        </Markdown>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Nav from \"./components/nav/nav\";\r\nimport Posts from \"./components/posts/posts\";\r\nimport Post from \"./components/posts/post\";\r\n\r\nconst App = () => {\r\n  console.log(process.env)\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Nav />\r\n        <Route exact path='/home' component={Posts} />\r\n        <Switch>\r\n          <Route exact path='/home/:sort' component={Posts} />\r\n          <Route path='/home/:sort/:id' component={Post} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/home\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}